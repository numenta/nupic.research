# ------------------------------------------------------------------------------
#  Numenta Platform for Intelligent Computing (NuPIC)
#  Copyright (C) 2019, Numenta, Inc.  Unless you have an agreement
#  with Numenta, Inc., for a separate license for this software code, the
#  following terms and conditions apply:
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU Affero Public License version 3 as
#  published by the Free Software Foundation.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
#  See the GNU Affero Public License for more details.
#
#  You should have received a copy of the GNU Affero Public License
#  along with this program.  If not, see http://www.gnu.org/licenses.
#
#  http://numenta.org/licenses/
#
# ------------------------------------------------------------------------------
[metadata]
license_files = LICENSE

[bdist_wheel]
universal=0

#[aliases]
#test=pytest

[tool:pytest]
testpaths=tests

[flake8]
; Select all
select = A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z

max-complexity = 18
max-line-length = 88
exclude = .git, .eggs, __pycache__, build, dist, __init__.py, .domino, .ipynb, .ipynb_checkpoints
; D1XX: Missing Docstrings
; D200: One-line docstring should fit on one line with quotes
; D205: 1 blank line required between summary line and description
; D4XX: Docstring Content Issues
; N812: lowercase imported as non lowercase. Allow "import torch.nn.functional as F"
; T001: print found
; E203: whitespace before ':'
; W503: line break before binary operator
; E800: Found commented out code
; T100: fixme found (FIXME)
; T101: fixme found (TODO)
; T003: pprint found
; C4XX: ignore all Flake8 comprehensions
; BLK100: ignore Black would make changes
ignore = D1, D200, D205, D4, N812, T001, E203, W503, E800, T100, T101, T003, C4, BLK100
copyright-check = True
copyright-author = Numenta
copyright-regexp = Copyright\s+\(C\)\s+\d{4},?\s+Numenta
inline-quotes = double

[isort]
multi_line_output = 3
include_trailing_comma = True
force_grid_wrap = 0
use_parentheses = True
line_length = 88
known_first_party = nupic.research, nupic.torch, nupic.tensorflow
known_third_party = tabulate, tqdm

[build_sphinx]
source-dir = docs/source
build-dir = docs/build
