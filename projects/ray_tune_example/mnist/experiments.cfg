# ----------------------------------------------------------------------
# Numenta Platform for Intelligent Computing (NuPIC)
# Copyright (C) 2019, Numenta, Inc.  Unless you have an agreement
# with Numenta, Inc., for a separate license for this software code, the
# following terms and conditions apply:
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero Public License version 3 as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU Affero Public License for more details.
#
# You should have received a copy of the GNU Affero Public License
# along with this program.  If not, see http://www.gnu.org/licenses.
#
# http://numenta.org/licenses/
# ----------------------------------------------------------------------

#
# Parameters used in the paper
#

[DEFAULT]
path = results

repetitions = 1
; Uncomment to average over multiple seeds
;repetitions = 10

; Uncomment to run multiple seeds as iterations
seed = 42
datadir = data

# Common network parameters
c1_input_shape = (1, 28, 28)
weight_sparsity = 0.3
boost_strength = 1.5
boost_strength_factor = 0.85
k_inference_factor = 1.5

iterations = 15
dropout = 0.0
batch_size = 64
first_epoch_batch_size = %(batch_size)s
test_batch_size = 1000
learning_rate = 0.01
momentum = 0.0
kernel_size = 5

output_size = 10

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; These are the parameters for the main networks described in the MNIST section
; of the paper.



[denseCNN1]
out_channels = 30
cnn_percent_on = 1.0
n = 1000
percent_on = 1.0
boost_strength = 0.0
momentum = 0.9
weight_sparsity = 1.0
learning_rate = tune.grid_search([0.01, 0.02])


[sparseCNN1]
out_channels = 32
cnn_percent_on = 0.1
n = 700
percent_on = 0.15
learning_rate = tune.grid_search([0.01, 0.02])
momentum = 0.0
first_epoch_batch_size = 4
iterations = 10


