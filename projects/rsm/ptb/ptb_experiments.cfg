# ----------------------------------------------------------------------
# Numenta Platform for Intelligent Computing (NuPIC)
# Copyright (C) 2019, Numenta, Inc.  Unless you have an agreement
# with Numenta, Inc., for a separate license for this software code, the
# following terms and conditions apply:
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero Public License version 3 as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU Affero Public License for more details.
#
# You should have received a copy of the GNU Affero Public License
# along with this program.  If not, see http://www.gnu.org/licenses.
#
# http://numenta.org/licenses/
# ----------------------------------------------------------------------

[DEFAULT]
# AWS sync
# Uncomment to upload results on S3
upload_dir = "s3://jgordon/ray/results"
sync_function = "aws s3 sync `dirname {local_dir}` {remote_dir}/`basename $(dirname {local_dir})`"

experiment = grid
path = ~/nta/results
data_dir = ~/nta/datasets

# Data
dataset = ptb

# Common network parameters
m_groups = 600
n_cells_per_group = 8
k_winners = 20
k_winner_cells = 1
gamma = 0.8
eps = 0.85

model_kind = rsm

cell_winner_softmax = False
activation_fn = tanh

repetitions = 1
momentum = 0.9
save_onnx_graph_at_checkpoint = False

embed_dim = 28  # Binary hash dimension
input_size = (1, 28)
output_size = 28
vocab_size = 10000
optimizer = adam
learning_rate = 0.0005
learning_rate_gamma = 0
x_b_norm=False
gpu_percentage = 1.0
loss_function = MSELoss
# Paper claims best test results at 25 pct of dataset, 4 epochs for train
iterations = 5
batch_size = 300
batches_in_epoch = 2000  # 250k RSM best on val (quarter of 'epoch')
eval_batches_in_epoch = 250
batch_log_interval = 500
eval_interval = 1  # Each x epochs

predictor_hidden_size=1200
predictor_output_size=%(vocab_size)s

stop = {"stop": 1}
checkpoint_at_end = True

################
[RSM_PTB_Paper]
batch_log_interval = 10000

################
[Flat_PTB_Explore]
checkpoint_at_end=False
gpu_percentage = 0.5
repetitions=6
iterations=22
forget_mu=tune.sample_from(lambda spec: np.random.uniform(0.008, 0.012))
dropout_p=0.0
m_groups=7000
k_winners=tune.sample_from(lambda spec: np.random.randint(10, 30))
n_cells_per_group=1
k_winner_cells=1
batches_in_epoch=2000
eps=0.5
gamma=0.0
pred_gain=1.0
boost_strat=col_boosting
x_b_norm=False
do_inhibition=False
boost_strength=1.0
boost_strength_factor=1.0
mult_integration=True
fpartition=0.6

################
[Flat_PTB_Snipe]
checkpoint_at_end=False
gpu_percentage=1.0
iterations=75
forget_mu=0.02
dropout_p=0.0
m_groups=3000
k_winners=15
n_cells_per_group=1
k_winner_cells=1
batch_size_first=50
batches_in_epoch=2000
eps=0.5
gamma=0.0
pred_gain=1.0
predictor_hidden_size=1200
boost_strat=col_boosting
x_b_norm=True
do_inhibition=False
boost_strength=1.0
boost_strength_factor=1.0
mult_integration=True
weight_sparsity=None
fpartition=0.5
balance_part_winners=True

################
[Flat_PTB_Snipe2]
checkpoint_at_end=False
gpu_percentage=0.5
iterations=75
forget_mu=0.02
dropout_p=0.0
m_groups=2000
k_winners=15
n_cells_per_group=1
k_winner_cells=1
batch_size_first=50
batches_in_epoch=2000
eps=0.5
gamma=0.0
pred_gain=1.0
predictor_hidden_size=1200
boost_strat=col_boosting
x_b_norm=True
do_inhibition=False
boost_strength=1.0
boost_strength_factor=0.97
mult_integration=True
weight_sparsity=0.3
fpartition=0.5

################
[Flat_PTB_Debug]
checkpoint_at_end=False
gpu_percentage=0.5
iterations=75
forget_mu=0.02
dropout_p=0.0
m_groups=2000
k_winners=15
n_cells_per_group=1
k_winner_cells=1
batch_size_first=50
batches_in_epoch=500
batch_log_interval = 50
eps=0.5
gamma=0.0
pred_gain=1.0
predictor_hidden_size=1200
boost_strat=col_boosting
x_b_norm=True
do_inhibition=False
boost_strength=1.0
boost_strength_factor=0.97
mult_integration=True
weight_sparsity=None
fpartition=0.5
balance_part_winners=True