# ----------------------------------------------------------------------
# Numenta Platform for Intelligent Computing (NuPIC)
# Copyright (C) 2019, Numenta, Inc.  Unless you have an agreement
# with Numenta, Inc., for a separate license for this software code, the
# following terms and conditions apply:
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero Public License version 3 as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU Affero Public License for more details.
#
# You should have received a copy of the GNU Affero Public License
# along with this program.  If not, see http://www.gnu.org/licenses.
#
# http://numenta.org/licenses/
# ----------------------------------------------------------------------

version: 2.1

jobs:
  checkout_code:
    # Checkout the code from github caching LFS files separately
    working_directory: ~/nta/nupic.research
    docker:
      - image: cimg/base:stable
    environment:
      - GIT_LFS_SKIP_SMUDGE: 1
    steps:
      - checkout

      # Cache git-lfs installation
      - restore_cache:
          key: git-lfs-bin-v2-key
      - run:
          name: Install git-lfs
          # FIXME: Downgrade git-lfs due to https://github.com/git-lfs/git-lfs/issues/4660
          command: >
            test -f ~/bin/git-lfs || (
            curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | sudo bash;
            sudo apt-get install git-lfs=2.13.3;
            mkdir ~/bin; sudo mv /usr/bin/git-lfs ~/bin/git-lfs;)
      - save_cache:
          key: git-lfs-bin-v2-key
          paths:
            - ~/bin/git-lfs

      # Cache git-lfs files
      - run: git lfs install
      - run: git lfs ls-files -l | cut -d ' ' -f1 | sort > git-lfs.sha
      - restore_cache:
          key: git-lfs-files-v1-key-{{ checksum "git-lfs.sha" }}
      - run: git lfs pull
      - save_cache:
          key: git-lfs-files-v1-key-{{ checksum "git-lfs.sha" }}
          paths:
            -  ~/nta/nupic.research/.git/lfs

      # Save current workspace for other steps
      - persist_to_workspace:
          root: ~/nta
          paths: nupic.research

  validate_contributor:
    working_directory: ~/nta/nupic.research
    docker:
      - image: cimg/base:stable
    steps:
      - attach_workspace:
          at: ~/nta
      - run:
          name: Validate contributor license
          command: ci/validate-contributor.sh

  install_dependencies:
    working_directory: ~/nta/nupic.research
    docker:
      - image: circleci/python:3.8
    steps:
      - attach_workspace:
          at: ~/nta
      - run:
          name: Get nupic.torch latest SHA
          command: |
            git ls-remote https://github.com/numenta/nupic.torch.git HEAD > nupic.torch.sha
      - run:
          name: Collect package dependencies
          command: |
            cat requirements.txt | grep 'packages' | cut -f2 -d ' ' | xargs -I {} cat {}/setup.cfg > packages.dependencies

      - restore_cache:
          key: pip-cache-v1-{{ arch }}-{{ checksum "nupic.torch.sha" }}-{{ checksum "setup.cfg" }}-{{ checksum "packages.dependencies"}}
      - run: pip show flake8-formatter-junit-xml || pip install --prefix ~/.local flake8-formatter-junit-xml
      - run: pip show nupic.torch || pip install --prefix ~/.local git+https://github.com/numenta/nupic.torch.git#egg=nupic.torch
      - run: pip show nupic.research || pip install --prefix ~/.local -r requirements.txt
      - run: pip list
      - save_cache:
          key: pip-cache-v1-{{ arch }}-{{ checksum "nupic.torch.sha" }}-{{ checksum "setup.cfg" }}-{{ checksum "packages.dependencies"}}
          paths:
            - ~/.local
      - persist_to_workspace:
          root: ~/nta
          paths: nupic.research

  check_style:
    working_directory: ~/nta/nupic.research
    docker:
      - image: circleci/python:3.8
    steps:
      - attach_workspace:
          at: ~/nta
      - restore_cache:
          key: pip-cache-v1-{{ arch }}-{{ checksum "nupic.torch.sha" }}-{{ checksum "setup.cfg" }}-{{ checksum "packages.dependencies"}}
      - run:
          name: Check Style
          command: |
            mkdir -p test_results/flake8
            ~/.local/bin/flake8 --show-source --format junit-xml --output-file test_results/flake8/results.xml packages src tests projects
      - store_test_results:
          path: test_results

  test:
    working_directory: ~/nta/nupic.research
    parallelism: 4 
    machine:
      resource_class: gpu.nvidia.small
      image: ubuntu-1604-cuda-11.1:202012-01
    steps:
      - attach_workspace:
          at: ~/nta
      - restore_cache:
          key: pip-cache-v1-{{ arch }}-{{ checksum "nupic.torch.sha" }}-{{ checksum "setup.cfg" }}-{{ checksum "packages.dependencies"}}
      - run: nvidia-smi
      - run: python --version
      - run:
          name: Run python tests
          environment:
            PYTEST_ADDOPTS: --junitxml=test_results/pytest/results.xml --verbose
          command: |
            set -e
            cp -f .circleci/pytest.ini pytest.ini
            mkdir -p test_results/pytest
            TEST_FILES=$(grep 'packages' requirements.txt | cut -d ' ' -f2 | xargs -I {} echo  '"{}/tests/**/*.py"' | xargs circleci tests glob "tests/**/*.py" | circleci tests split --split-by=timings --show-counts)
            pytest -ra $TEST_FILES
      - store_test_results:
          path: test_results

  build:
    working_directory: ~/nta/nupic.research
    docker:
      - image: circleci/python:3.8
    steps:
      - attach_workspace:
          at: ~/nta
      - restore_cache:
          key: pip-cache-v1-{{ arch }}-{{ checksum "nupic.torch.sha" }}-{{ checksum "setup.cfg" }}-{{ checksum "packages.dependencies"}}
      - run:
          name: Build wheel
          environment:
            VERBOSE: 1
          command: python setup.py bdist_wheel
      - store_artifacts:
          path: dist


workflows:
  version: 2.1

  validate-build-test:
    jobs:
      - checkout_code
      - validate_contributor:
          requires:
            - checkout_code
      - install_dependencies:
          requires:
            - validate_contributor
      - check_style:
          requires:
            - install_dependencies
      - test:
          requires:
            - install_dependencies
      - build:
          requires:
            - check_style
            - test
